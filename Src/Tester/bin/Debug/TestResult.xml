<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Users\hiropy\Desktop\GenericSQL\Tester\bin\Debug\Tester.exe" total="171" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2018-04-13" time="09:39:14">
  <environment nunit-version="2.6.4.14350" clr-version="2.0.50727.8825" os-version="Microsoft Windows NT 6.2.9200.0" platform="Win32NT" cwd="C:\Program Files (x86)\NUnit 2.6.4\bin" machine-name="MACBOOKAIR" user="hiropy" user-domain="MACBOOKAIR" />
  <culture-info current-culture="ja-JP" current-uiculture="en-US" />
  <test-suite type="Assembly" name="C:\Users\hiropy\Desktop\GenericSQL\Tester\bin\Debug\Tester.exe" executed="True" result="Success" success="True" time="1.249" asserts="0">
    <results>
      <test-suite type="TestFixture" name="ClassOfTester" executed="True" result="Success" success="True" time="0.002" asserts="0">
        <results>
          <test-case name="ClassOfTester.ClassOf" executed="True" result="Success" success="True" time="0.000" asserts="8" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DictionaryTester" executed="True" result="Success" success="True" time="0.013" asserts="0">
        <results>
          <test-case name="DictionaryTester.Basic" executed="True" result="Success" success="True" time="0.001" asserts="26" />
          <test-case name="DictionaryTester.InvalidData" executed="True" result="Success" success="True" time="0.001" asserts="31" />
          <test-case name="DictionaryTester.ObjectData" executed="True" result="Success" success="True" time="0.000" asserts="4" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="InstanceOfTester" executed="True" result="Success" success="True" time="0.002" asserts="0">
        <results>
          <test-case name="InstanceOfTester.InstanceOf" executed="True" result="Success" success="True" time="0.000" asserts="4" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="StringExtensionTester" executed="True" result="Success" success="True" time="0.008" asserts="0">
        <results>
          <test-case name="StringExtensionTester.IsInComment" executed="True" result="Success" success="True" time="0.000" asserts="10" />
          <test-case name="StringExtensionTester.IsInComment2" executed="True" result="Success" success="True" time="0.000" asserts="16" />
          <test-case name="StringExtensionTester.Split" executed="True" result="Success" success="True" time="0.000" asserts="11" />
        </results>
      </test-suite>
      <test-suite type="Namespace" name="Tester" executed="True" result="Success" success="True" time="1.191" asserts="0">
        <results>
          <test-suite type="TestFixture" name="AddWherePredicateTester" executed="True" result="Success" success="True" time="0.007" asserts="0">
            <results>
              <test-case name="Tester.AddWherePredicateTester.SimpleQuery" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="Tester.AddWherePredicateTester.UnionAll" executed="True" result="Success" success="True" time="0.000" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ConvertToSelectConstantTester" executed="True" result="Success" success="True" time="0.016" asserts="0">
            <results>
              <test-case name="Tester.ConvertToSelectConstantTester.Bracket" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Tester.ConvertToSelectConstantTester.SimpleQuery" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Tester.ConvertToSelectConstantTester.Union" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GetCNFTester" executed="True" result="Success" success="True" time="0.120" asserts="0">
            <results>
              <test-case name="Tester.GetCNFTester.AggregateFunc" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Tester.GetCNFTester.Case" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Tester.GetCNFTester.CommaJoin" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Tester.GetCNFTester.DeleteStmt" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="Tester.GetCNFTester.Distinct" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Tester.GetCNFTester.EscapedAliasName" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Tester.GetCNFTester.Exists" executed="True" result="Success" success="True" time="0.002" asserts="5" />
              <test-case name="Tester.GetCNFTester.ExistsUnion" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Tester.GetCNFTester.GroupBy" executed="True" result="Success" success="True" time="0.004" asserts="4" />
              <test-case name="Tester.GetCNFTester.InsertStmt" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="Tester.GetCNFTester.Join" executed="True" result="Success" success="True" time="0.002" asserts="5" />
              <test-case name="Tester.GetCNFTester.MergeStmt" executed="True" result="Success" success="True" time="0.000" asserts="0" />
              <test-case name="Tester.GetCNFTester.SimpleQuery" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Tester.GetCNFTester.SubQueryInExpr" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Tester.GetCNFTester.SubQueryInFrom" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Tester.GetCNFTester.SubQueryInResults" executed="True" result="Success" success="True" time="0.003" asserts="7" />
              <test-case name="Tester.GetCNFTester.SubQueryUnionInResults" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="Tester.GetCNFTester.Union" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Tester.GetCNFTester.UpdateStmt" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Tester.GetCNFTester.WithoutFrom" executed="True" result="Success" success="True" time="0.000" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GetIfConditionsTester" executed="True" result="Success" success="True" time="0.010" asserts="0">
            <results>
              <test-case name="Tester.GetIfConditionsTester.IfStmt" executed="True" result="Success" success="True" time="0.002" asserts="32" />
              <test-case name="Tester.GetIfConditionsTester.SimpleQuery" executed="True" result="Success" success="True" time="0.000" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NormalizeOrderByTester" executed="True" result="Success" success="True" time="0.057" asserts="0">
            <results>
              <test-case name="Tester.NormalizeOrderByTester.AggregateFunc" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Tester.NormalizeOrderByTester.Bracketed" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Tester.NormalizeOrderByTester.Distinct" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Tester.NormalizeOrderByTester.GroupBy" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Tester.NormalizeOrderByTester.Join" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Tester.NormalizeOrderByTester.NoTableColumnsParam" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Tester.NormalizeOrderByTester.SimpleOrderBy" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Tester.NormalizeOrderByTester.SubQueryInOrderBy" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Tester.NormalizeOrderByTester.SubQueryInResults" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Tester.NormalizeOrderByTester.Union" executed="True" result="Success" success="True" time="0.004" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RenameTableAliasTester" executed="True" result="Success" success="True" time="0.067" asserts="0">
            <results>
              <test-case name="Tester.RenameTableAliasTester.CollisionName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Tester.RenameTableAliasTester.DeleteStmt" executed="True" result="Success" success="True" time="0.005" asserts="3" />
              <test-case name="Tester.RenameTableAliasTester.EscapedAliasName" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Tester.RenameTableAliasTester.Exists" executed="True" result="Success" success="True" time="0.003" asserts="1" />
              <test-case name="Tester.RenameTableAliasTester.GroupBy" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Tester.RenameTableAliasTester.InsertStmt" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="Tester.RenameTableAliasTester.Join" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Tester.RenameTableAliasTester.SimpleQuery" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Tester.RenameTableAliasTester.SubQueryInResults" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Tester.RenameTableAliasTester.TruncateStmt" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Tester.RenameTableAliasTester.Union" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Tester.RenameTableAliasTester.UpdateStmt" executed="True" result="Success" success="True" time="0.001" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ResultInfoASTTester" executed="True" result="Success" success="True" time="0.194" asserts="0">
            <results>
              <test-case name="Tester.ResultInfoASTTester.AggregateFunc" executed="True" result="Success" success="True" time="0.012" asserts="22" />
              <test-case name="Tester.ResultInfoASTTester.AmbiguousColumn" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Tester.ResultInfoASTTester.Bracket" executed="True" result="Success" success="True" time="0.004" asserts="6" />
              <test-case name="Tester.ResultInfoASTTester.CaseSensitivity" executed="True" result="Success" success="True" time="0.005" asserts="66" />
              <test-case name="Tester.ResultInfoASTTester.Distinct" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Tester.ResultInfoASTTester.DualTable" executed="True" result="Success" success="True" time="0.000" asserts="0" />
              <test-case name="Tester.ResultInfoASTTester.From" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Tester.ResultInfoASTTester.GroupBy" executed="True" result="Success" success="True" time="0.003" asserts="32" />
              <test-case name="Tester.ResultInfoASTTester.GroupByAggregateFunc" executed="True" result="Success" success="True" time="0.009" asserts="24" />
              <test-case name="Tester.ResultInfoASTTester.Join" executed="True" result="Success" success="True" time="0.004" asserts="26" />
              <test-case name="Tester.ResultInfoASTTester.JoinGroupBy" executed="True" result="Success" success="True" time="0.006" asserts="14" />
              <test-case name="Tester.ResultInfoASTTester.Literal" executed="True" result="Success" success="True" time="0.002" asserts="6" />
              <test-case name="Tester.ResultInfoASTTester.NameCollision" executed="True" result="Success" success="True" time="0.003" asserts="22" />
              <test-case name="Tester.ResultInfoASTTester.SimpleQuery" executed="True" result="Success" success="True" time="0.004" asserts="18" />
              <test-case name="Tester.ResultInfoASTTester.SubQuery1" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="Tester.ResultInfoASTTester.SubQuery2" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Tester.ResultInfoASTTester.UnionAll" executed="True" result="Success" success="True" time="0.006" asserts="36" />
              <test-case name="Tester.ResultInfoASTTester.UnionAllAggregateFunc" executed="True" result="Success" success="True" time="0.006" asserts="10" />
              <test-case name="Tester.ResultInfoASTTester.UnionAllDistinct" executed="True" result="Success" success="True" time="0.002" asserts="18" />
              <test-case name="Tester.ResultInfoASTTester.UnionAllGroupBy" executed="True" result="Success" success="True" time="0.003" asserts="16" />
              <test-case name="Tester.ResultInfoASTTester.UnionAllJoinGroupBy" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Tester.ResultInfoASTTester.UnionAllWithoutFrom" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Tester.ResultInfoASTTester.Wildcard" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="Tester.ResultInfoASTTester.WithoutFrom" executed="True" result="Success" success="True" time="0.002" asserts="11" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SqlBuilderTester" executed="True" result="Success" success="True" time="0.247" asserts="0">
            <results>
              <test-case name="Tester.SqlBuilderTester.AddAndPredicate" executed="True" result="Success" success="True" time="0.003" asserts="8" />
              <test-case name="Tester.SqlBuilderTester.AddAndPredicate2" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="Tester.SqlBuilderTester.AddOrderBy" executed="True" result="Success" success="True" time="0.002" asserts="5" />
              <test-case name="Tester.SqlBuilderTester.ClearOrderBy" executed="True" result="Success" success="True" time="0.000" asserts="3" />
              <test-case name="Tester.SqlBuilderTester.ClearWhere" executed="True" result="Success" success="True" time="0.002" asserts="5" />
              <test-case name="Tester.SqlBuilderTester.ConvertToExistsExpr" executed="True" result="Success" success="True" time="0.002" asserts="6" />
              <test-case name="Tester.SqlBuilderTester.EmptyStmt" executed="True" result="Success" success="True" time="0.002" asserts="25" />
              <test-case name="Tester.SqlBuilderTester.GetAllTableNames" executed="True" result="Success" success="True" time="0.004" asserts="14" />
              <test-case name="Tester.SqlBuilderTester.GetAssignments" executed="True" result="Success" success="True" time="0.004" asserts="26" />
              <test-case name="Tester.SqlBuilderTester.GetCNF" executed="True" result="Success" success="True" time="0.002" asserts="5" />
              <test-case name="Tester.SqlBuilderTester.GetIfBranches" executed="True" result="Success" success="True" time="0.003" asserts="16" />
              <test-case name="Tester.SqlBuilderTester.GetSelectItems" executed="True" result="Success" success="True" time="0.002" asserts="9" />
              <test-case name="Tester.SqlBuilderTester.GetSelectItems2" executed="True" result="Success" success="True" time="0.002" asserts="9" />
              <test-case name="Tester.SqlBuilderTester.GetSrcTableAliasNames" executed="True" result="Success" success="True" time="0.007" asserts="12" />
              <test-case name="Tester.SqlBuilderTester.GetSrcTableNames" executed="True" result="Success" success="True" time="0.003" asserts="13" />
              <test-case name="Tester.SqlBuilderTester.GetStatementType" executed="True" result="Success" success="True" time="0.007" asserts="6" />
              <test-case name="Tester.SqlBuilderTester.GetTargetTableAliasName" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Tester.SqlBuilderTester.GetTargetTableExplicitAliasName" executed="True" result="Success" success="True" time="0.003" asserts="8" />
              <test-case name="Tester.SqlBuilderTester.GetTargetTableName" executed="True" result="Success" success="True" time="0.003" asserts="8" />
              <test-case name="Tester.SqlBuilderTester.GetWhere" executed="True" result="Success" success="True" time="0.002" asserts="9" />
              <test-case name="Tester.SqlBuilderTester.HasTableWildcard" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="Tester.SqlBuilderTester.HasWildcard" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Tester.SqlBuilderTester.IsValidSyntax" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Tester.SqlBuilderTester.RaisePrimaryKey" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Tester.SqlBuilderTester.RenameTableAliasName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Tester.SqlBuilderTester.SetConstant" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Tester.SqlBuilderTester.SetCount" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Tester.SqlBuilderTester.SetMaxRows" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="Tester.SqlBuilderTester.SetPlaceHolder" executed="True" result="Success" success="True" time="0.004" asserts="9" />
              <test-case name="Tester.SqlBuilderTester.SetPlaceHolder2" executed="True" result="Success" success="True" time="0.003" asserts="20" />
              <test-case name="Tester.SqlBuilderTester.SetPlaceHolder3" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Tester.SqlBuilderTester.SetRowLimit" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Tester.SqlBuilderTester.ToString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Tester.SqlBuilderTester.WrapInSelectStar" executed="True" result="Success" success="True" time="0.005" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SqlExprTester" executed="True" result="Success" success="True" time="0.065" asserts="0">
            <results>
              <test-case name="Tester.SqlExprTester.Clone" executed="True" result="Success" success="True" time="0.000" asserts="4" />
              <test-case name="Tester.SqlExprTester.Empty" executed="True" result="Success" success="True" time="0.000" asserts="7" />
              <test-case name="Tester.SqlExprTester.GetAllPlaceHolders" executed="True" result="Success" success="True" time="0.000" asserts="6" />
              <test-case name="Tester.SqlExprTester.HasUnplacedHolder" executed="True" result="Success" success="True" time="0.000" asserts="8" />
              <test-case name="Tester.SqlExprTester.HasUnplacedHolders" executed="True" result="Success" success="True" time="0.000" asserts="6" />
              <test-case name="Tester.SqlExprTester.IsDefault" executed="True" result="Success" success="True" time="0.000" asserts="2" />
              <test-case name="Tester.SqlExprTester.IsLiteral" executed="True" result="Success" success="True" time="0.000" asserts="4" />
              <test-case name="Tester.SqlExprTester.IsPlaceHolderOnly" executed="True" result="Success" success="True" time="0.000" asserts="2" />
              <test-case name="Tester.SqlExprTester.Place" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Tester.SqlExprTester.Place2" executed="True" result="Success" success="True" time="0.000" asserts="6" />
              <test-case name="Tester.SqlExprTester.ToString" executed="True" result="Success" success="True" time="0.000" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SqlPredicateTester" executed="True" result="Success" success="True" time="0.057" asserts="0">
            <results>
              <test-case name="Tester.SqlPredicateTester.And" executed="True" result="Success" success="True" time="0.005" asserts="4" />
              <test-case name="Tester.SqlPredicateTester.Clone" executed="True" result="Success" success="True" time="0.000" asserts="4" />
              <test-case name="Tester.SqlPredicateTester.Empty" executed="True" result="Success" success="True" time="0.000" asserts="8" />
              <test-case name="Tester.SqlPredicateTester.GetAllPlaceHolders" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Tester.SqlPredicateTester.HasUnplacedHolder" executed="True" result="Success" success="True" time="0.000" asserts="8" />
              <test-case name="Tester.SqlPredicateTester.HasUnplacedHolders" executed="True" result="Success" success="True" time="0.000" asserts="6" />
              <test-case name="Tester.SqlPredicateTester.IsPlaceHolderOnly" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Tester.SqlPredicateTester.Place" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Tester.SqlPredicateTester.Place2" executed="True" result="Success" success="True" time="0.002" asserts="20" />
              <test-case name="Tester.SqlPredicateTester.ToString" executed="True" result="Success" success="True" time="0.002" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="StmtTester" executed="True" result="Success" success="True" time="0.282" asserts="0">
            <results>
              <test-case name="Tester.StmtTester.BracketedQueryTest" executed="True" result="Success" success="True" time="0.002" asserts="9" />
              <test-case name="Tester.StmtTester.CallStmt" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Tester.StmtTester.ColumnModify" executed="True" result="Success" success="True" time="0.000" asserts="6" />
              <test-case name="Tester.StmtTester.CommaJoinSource" executed="True" result="Success" success="True" time="0.003" asserts="4" />
              <test-case name="Tester.StmtTester.DeleteStmt" executed="True" result="Success" success="True" time="0.004" asserts="10" />
              <test-case name="Tester.StmtTester.ExprTest" executed="True" result="Success" success="True" time="0.005" asserts="2" />
              <test-case name="Tester.StmtTester.ForDbAccessor" executed="True" result="Success" success="True" time="0.007" asserts="11" />
              <test-case name="Tester.StmtTester.ForUpdate" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="Tester.StmtTester.From2" executed="True" result="Success" success="True" time="0.003" asserts="6" />
              <test-case name="Tester.StmtTester.IfStmtTest" executed="True" result="Success" success="True" time="0.002" asserts="6" />
              <test-case name="Tester.StmtTester.InsertSelectStmtModify" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Tester.StmtTester.InsertStmtTest" executed="True" result="Success" success="True" time="0.006" asserts="11" />
              <test-case name="Tester.StmtTester.InsertValuesStmtModify" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="Tester.StmtTester.IQueryClauseAddResult" executed="True" result="Success" success="True" time="0.010" asserts="10" />
              <test-case name="Tester.StmtTester.LimitClause" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="Tester.StmtTester.LimitClauseModify" executed="True" result="Success" success="True" time="0.000" asserts="9" />
              <test-case name="Tester.StmtTester.Literals" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Tester.StmtTester.LiteralsModify" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Tester.StmtTester.MergeStmt" executed="True" result="Success" success="True" time="0.006" asserts="13" />
              <test-case name="Tester.StmtTester.OnConflict" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Tester.StmtTester.OuterJoinKeyword" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="Tester.StmtTester.PlaceHolderModify" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="Tester.StmtTester.PragmaStmt" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Tester.StmtTester.PredicateTest" executed="True" result="Success" success="True" time="0.014" asserts="2" />
              <test-case name="Tester.StmtTester.QualifiedNameTest" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="Tester.StmtTester.SelectStmt" executed="True" result="Success" success="True" time="0.003" asserts="10" />
              <test-case name="Tester.StmtTester.SelectStmtComments" executed="True" result="Success" success="True" time="0.008" asserts="20" />
              <test-case name="Tester.StmtTester.SelectStmtModify" executed="True" result="Success" success="True" time="0.000" asserts="10" />
              <test-case name="Tester.StmtTester.StmtSeparatorTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Tester.StmtTester.TableModify" executed="True" result="Success" success="True" time="0.000" asserts="10" />
              <test-case name="Tester.StmtTester.TruncateStmt" executed="True" result="Success" success="True" time="0.000" asserts="4" />
              <test-case name="Tester.StmtTester.UnionTest" executed="True" result="Success" success="True" time="0.005" asserts="4" />
              <test-case name="Tester.StmtTester.UpdateStmt" executed="True" result="Success" success="True" time="0.002" asserts="9" />
              <test-case name="Tester.StmtTester.UpdateStmtModify" executed="True" result="Success" success="True" time="0.002" asserts="9" />
              <test-case name="Tester.StmtTester.WithClauseTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>